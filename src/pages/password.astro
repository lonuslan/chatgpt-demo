---
import Layout from '../layouts/Layout.astro'
import '../styles/define.css'
---

<!-- <Layout title="Password Protection">
  <main class="h-screen col-fcc">
    <div class="op-30">Please input password</div>
    <div id="input_container" class="flex mt-4">
      <input id="password_input" type="password" class="gpt-password-input" />
      <div id="submit" class="gpt-password-submit">
        <div class="i-carbon-arrow-right" />
      </div>
    </div>
  </main>
</Layout> -->

<Layout title="Password Protection">
  <div id="root">
    <div class="hope-center hope-c-jKOUQW hope-c-PJLV hope-c-PJLV-ibcBsNO-css">
      <div id = 'input_container' class="hope-stack hope-c-dhzjXW hope-c-PJLV hope-c-PJLV-ifjOQLV-css">
        <div class="hope-flex hope-c-PJLV hope-c-PJLV-igBgqqg-css">
          <img class="hope-image hope-c-PJLV hope-c-PJLV-ibwASZs-css" src="/apple-touch-icon.png">
          <h2 class="hope-heading hope-c-PJLV hope-c-iqCzBn hope-c-PJLV hope-c-PJLV-ibojvKk-css">Shake your hands.</h2>
        </div>
        <input id="password_input" class="gpt-password-input hope-input 
          hope-c-kvTTWD hope-c-PJLV hope-c-kvTTWD-hYRNAb-variant-filled hope-c-kvTTWD-gfwxhr-size-md 
          hope-c-PJLV-hbsPHc-cv hope-c-PJLV hope-c-PJLV-ibtHApG-css" 
          type="password" name="password" placeholder="Please input password">
        <button id="submit" class="hope-button hope-c-ivMHWx hope-c-ivMHWx-kcPQpq-variant-subtle 
        hope-c-ivMHWx-kWSPeQ-size-md hope-c-ivMHWx-fbcPgu-cv hope-c-PJLV 
        hope-c-PJLV-ifDMJcV-css" 
        type="button" role="button">提交
        </button>
      </div>
      <div class="hope-c-PJLV hope-c-PJLV-ihWgyFw-css">
        <div class="hope-c-PJLV hope-c-PJLV-ifJliWT-css">
          <svg height="1337" width="1337">
            <defs><path id="path-1" opacity="1" fill-rule="evenodd" d="M1337,668.5 C1337,1037.455193874239 1037.455193874239,1337 668.5,1337 C523.6725684305388,1337 337,1236 370.50000000000006,1094 C434.03835568300906,824.6732385973953 6.906089672974592e-14,892.6277623047779 0,668.5000000000001 C0,299.5448061257611 299.5448061257609,1.1368683772161603e-13 668.4999999999999,0 C1037.455193874239,0 1337,299.544806125761 1337,668.5Z"></path>
              <linearGradient id="linearGradient-2" x1="0.79" y1="0.62" x2="0.21" y2="0.86"><stop offset="0" stop-opacity="1" stop-color="#28aff0"></stop><stop offset="1" stop-opacity="1" stop-color="#120fc4"></stop></linearGradient>
            </defs><g opacity="1"><use xlink:href="#path-1" fill="url(#linearGradient-2)" fill-opacity="1"></use></g>
          </svg>
        </div>
        <div class="hope-c-PJLV hope-c-PJLV-igjRXTJ-css">
          <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="896" width="967.8852157128662">
            <defs><path id="path-2" opacity="1" fill-rule="evenodd" d="M896,448 C1142.6325445712241,465.5747656464056 695.2579309733121,896 448,896 C200.74206902668806,896 5.684341886080802e-14,695.2579309733121 0,448.0000000000001 C0,200.74206902668806 200.74206902668791,5.684341886080802e-14 447.99999999999994,0 C695.2579309733121,0 475,418 896,448Z"></path>
              <linearGradient id="linearGradient-3" x1="0.5" y1="0" x2="0.5" y2="1"><stop offset="0" stop-opacity="1" stop-color="#28aff0"></stop><stop offset="1" stop-opacity="1" stop-color="#120fc4"></stop></linearGradient>
            </defs><g opacity="1"><use xlink:href="#path-2" fill="url(#linearGradient-3)" fill-opacity="1"></use></g>
          </svg>
        </div>
      </div>
    </div>
  </div>
</Layout>
<script>
const inputContainer = document.getElementById('input_container') as HTMLDivElement
const input = document.getElementById('password_input') as HTMLInputElement
const submitButton = document.getElementById('submit') as HTMLDivElement

input.onkeydown = async(event) => {
  if (event.key === 'Enter')
    handleSubmit()
}
submitButton.onclick = handleSubmit

async function handleSubmit() {
  const password = input.value
  const response = await fetch('/api/auth', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      inputPass: password,
    }),
  })
  const responseJson = await response.json()
  if (responseJson.code === 0) {
    // 将密码加密保存到localstorage
    const storedPass = responseJson.password
    localStorage.setItem('pass', storedPass)
    window.location.href = '/'
  } else {
    inputContainer.classList.add('invalid')
    setTimeout(() => {
      inputContainer.classList.remove('invalid')
    }, 300)
  }
}
</script>

<style>
@keyframes shake {
  0% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(0.5rem);
  }
  75% {
    transform: translateX(-0.5rem);
  }
  100% {
    transform: translateX(0);
  }
}

.invalid {
  animation: shake 0.2s ease-in-out 0s 2;
}

</style>

